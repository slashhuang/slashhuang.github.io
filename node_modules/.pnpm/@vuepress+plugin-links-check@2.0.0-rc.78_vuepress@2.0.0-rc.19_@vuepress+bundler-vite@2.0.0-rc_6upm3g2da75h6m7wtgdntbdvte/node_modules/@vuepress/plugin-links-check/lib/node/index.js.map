{"version":3,"file":"index.js","sources":["../../src/node/checkMarkdownLink.ts","../../src/node/linksCheckPlugin.ts"],"sourcesContent":["import { isLinkAbsolute } from '@vuepress/helper'\nimport type { App, Page } from 'vuepress/core'\nimport { logger } from 'vuepress/utils'\n\nexport const checkMarkdownLink = (\n  page: Page,\n  { options, pages }: App,\n  isIgnoreLink: (link: string) => boolean,\n): boolean => {\n  const pagePath = page.filePathRelative ?? page.path\n\n  const markdownLinks = page.links.filter(({ raw }) =>\n    raw.match(/^.+.md((?:\\?|#).*)?$/),\n  )\n\n  const brokenLinks = [\n    ...markdownLinks\n      // Relative markdown links\n      .filter(({ raw }) => !isLinkAbsolute(raw))\n      .filter(\n        ({ relative }) =>\n          // Check whether the page exists\n          pages.every(\n            ({ filePathRelative }) => filePathRelative !== decodeURI(relative),\n          ) && !isIgnoreLink(relative),\n      ),\n    ...markdownLinks\n      // Absolute markdown links\n      .filter(({ raw }) => isLinkAbsolute(raw))\n      .filter(\n        ({ absolute }) =>\n          // Check whether the page exists\n          absolute &&\n          pages.every(\n            ({ filePathRelative }) =>\n              !filePathRelative ||\n              (`${options.base}${filePathRelative}` !== decodeURI(absolute) &&\n                !isIgnoreLink(absolute)),\n          ),\n      ),\n  ].map(({ raw }) => raw)\n\n  if (brokenLinks.length) {\n    logger.warn(`Broken links found in ${pagePath}: ${brokenLinks.join(', ')}`)\n\n    return true\n  }\n\n  return false\n}\n","import { isArray, isFunction, isRegExp } from '@vuepress/helper'\nimport type { Plugin } from 'vuepress'\nimport { checkMarkdownLink } from './checkMarkdownLink.js'\nimport type { LinksCheckPluginOptions } from './options.js'\n\nexport const linksCheckPlugin =\n  ({\n    dev = true,\n    build = true,\n    exclude: ignore = [],\n  }: LinksCheckPluginOptions): Plugin =>\n  (app) => {\n    const enabled =\n      (app.env.isDev && dev) || (app.env.isBuild && build) || false\n\n    const isLinkIgnored = isFunction(ignore)\n      ? (link: string): boolean => ignore(link, app.env.isDev)\n      : isArray(ignore)\n        ? (link: string): boolean =>\n            ignore.some((item) =>\n              isRegExp(item) ? item.test(link) : item === link,\n            )\n        : (): boolean => false\n\n    const shouldThrowError = app.env.isBuild && build === 'error'\n    let isAppInitialized = false\n\n    return {\n      name: '@vuepress/plugin-links-check',\n\n      extendsPage: (page) => {\n        if (enabled && isAppInitialized) {\n          checkMarkdownLink(page, app, isLinkIgnored)\n        }\n      },\n\n      onInitialized: () => {\n        isAppInitialized = true\n\n        if (enabled) {\n          const results = app.pages.map((page) =>\n            checkMarkdownLink(page, app, isLinkIgnored),\n          )\n\n          if (shouldThrowError && results.some(Boolean)) {\n            throw new Error(\n              'Dead links found in markdown, please check the console logs for details',\n            )\n          }\n        }\n      },\n    }\n  }\n"],"names":["checkMarkdownLink","page","options","pages","isIgnoreLink","pagePath","markdownLinks","raw","brokenLinks","isLinkAbsolute","relative","filePathRelative","absolute","logger","linksCheckPlugin","dev","build","ignore","app","enabled","isLinkIgnored","isFunction","link","isArray","item","isRegExp","shouldThrowError","isAppInitialized","results"],"mappings":"qIAIa,MAAAA,EAAoB,CAC/BC,EACA,CAAE,QAAAC,EAAS,MAAAC,CAAM,EACjBC,IACY,CACZ,MAAMC,EAAWJ,EAAK,kBAAoBA,EAAK,KAEzCK,EAAgBL,EAAK,MAAM,OAAO,CAAC,CAAE,IAAAM,CAAI,IAC7CA,EAAI,MAAM,sBAAsB,CAClC,EAEMC,EAAc,CAClB,GAAGF,EAEA,OAAO,CAAC,CAAE,IAAAC,CAAI,IAAM,CAACE,EAAeF,CAAG,CAAC,EACxC,OACC,CAAC,CAAE,SAAAG,CAAS,IAEVP,EAAM,MACJ,CAAC,CAAE,iBAAAQ,CAAiB,IAAMA,IAAqB,UAAUD,CAAQ,CACnE,GAAK,CAACN,EAAaM,CAAQ,CAC/B,EACF,GAAGJ,EAEA,OAAO,CAAC,CAAE,IAAAC,CAAI,IAAME,EAAeF,CAAG,CAAC,EACvC,OACC,CAAC,CAAE,SAAAK,CAAS,IAEVA,GACAT,EAAM,MACJ,CAAC,CAAE,iBAAAQ,CAAiB,IAClB,CAACA,GACA,GAAGT,EAAQ,IAAI,GAAGS,CAAgB,KAAO,UAAUC,CAAQ,GAC1D,CAACR,EAAaQ,CAAQ,CAC5B,CACJ,CACJ,EAAE,IAAI,CAAC,CAAE,IAAAL,CAAI,IAAMA,CAAG,EAEtB,OAAIC,EAAY,QACdK,EAAO,KAAK,yBAAyBR,CAAQ,KAAKG,EAAY,KAAK,IAAI,CAAC,EAAE,EAEnE,IAGF,EACT,EC5CaM,EACX,CAAC,CACC,IAAAC,EAAM,GACN,MAAAC,EAAQ,GACR,QAASC,EAAS,CACpB,CAAA,IACCC,GAAQ,CACP,MAAMC,EACHD,EAAI,IAAI,OAASH,GAASG,EAAI,IAAI,SAAWF,GAAU,GAEpDI,EAAgBC,EAAWJ,CAAM,EAClCK,GAA0BL,EAAOK,EAAMJ,EAAI,IAAI,KAAK,EACrDK,EAAQN,CAAM,EACXK,GACCL,EAAO,KAAMO,GACXC,EAASD,CAAI,EAAIA,EAAK,KAAKF,CAAI,EAAIE,IAASF,CAC9C,EACF,IAAe,GAEfI,EAAmBR,EAAI,IAAI,SAAWF,IAAU,QACtD,IAAIW,EAAmB,GAEvB,MAAO,CACL,KAAM,+BAEN,YAAc1B,GAAS,CACjBkB,GAAWQ,GACb3B,EAAkBC,EAAMiB,EAAKE,CAAa,CAE9C,EAEA,cAAe,IAAM,CAGnB,GAFAO,EAAmB,GAEfR,EAAS,CACX,MAAMS,EAAUV,EAAI,MAAM,IAAKjB,GAC7BD,EAAkBC,EAAMiB,EAAKE,CAAa,CAC5C,EAEA,GAAIM,GAAoBE,EAAQ,KAAK,OAAO,EAC1C,MAAM,IAAI,MACR,yEACF,CAEJ,CACF,CACF,CACF"}